/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../../common";
import type { Dao, DaoInterface } from "../../../contracts/Dao.sol/Dao";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_market",
        type: "address",
      },
      {
        internalType: "address",
        name: "_daoNFT",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_nftTokenId",
        type: "uint256",
      },
    ],
    name: "createProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalIndex",
        type: "uint256",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "numProposals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "nftTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "YesVotes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "NoVotes",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalIndex",
        type: "uint256",
      },
      {
        internalType: "enum Dao.Vote",
        name: "vote",
        type: "uint8",
      },
    ],
    name: "voteOnProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405260405162001a3c38038062001a3c833981810160405281019062000029919062000269565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200009f5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000969190620002c1565b60405180910390fd5b620000b0816200013b60201b60201c565b5081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002de565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002318262000204565b9050919050565b620002438162000224565b81146200024f57600080fd5b50565b600081519050620002638162000238565b92915050565b60008060408385031215620002835762000282620001ff565b5b6000620002938582860162000252565b9250506020620002a68582860162000252565b9150509250929050565b620002bb8162000224565b82525050565b6000602082019050620002d86000830184620002b0565b92915050565b61174e80620002ee6000396000f3fe60806040526004361061008a5760003560e01c8063715018a611610059578063715018a6146101655780637362377b1461017c5780638da5cb5b14610193578063efafb22e146101be578063f2fde38b146101e757610091565b8063013cf08b146100935780630d61b519146100d4578063400e3949146100fd5780635a43dc001461012857610091565b3661009157005b005b34801561009f57600080fd5b506100ba60048036038101906100b59190610ef8565b610210565b6040516100cb959493929190610f4f565b60405180910390f35b3480156100e057600080fd5b506100fb60048036038101906100f69190610ef8565b610253565b005b34801561010957600080fd5b506101126105aa565b60405161011f9190610fa2565b60405180910390f35b34801561013457600080fd5b5061014f600480360381019061014a9190610ef8565b6105b0565b60405161015c9190610fa2565b60405180910390f35b34801561017157600080fd5b5061017a6107d1565b005b34801561018857600080fd5b506101916107e5565b005b34801561019f57600080fd5b506101a86108ec565b6040516101b59190610ffe565b60405180910390f35b3480156101ca57600080fd5b506101e560048036038101906101e0919061103e565b610915565b005b3480156101f357600080fd5b5061020e600480360381019061020991906110aa565b610ce4565b005b60016020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016102b09190610ffe565b602060405180830381865afa1580156102cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f191906110ec565b11610331576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032890611176565b60405180910390fd5b80426001600083815260200190815260200160002060010154111561038b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610382906111e2565b60405180910390fd5b600015156001600083815260200190815260200160002060040160009054906101000a900460ff161515146103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec90611274565b60405180910390fd5b6000600160008481526020019081526020016000209050806003015481600201541115610588576000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398d5fdca6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af91906110ec565b9050804710156104f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104eb906112e0565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663efef39a18284600001546040518363ffffffff1660e01b81526004016105549190610fa2565b6000604051808303818588803b15801561056d57600080fd5b505af1158015610581573d6000803e3d6000fd5b5050505050505b60018160040160006101000a81548160ff021916908315150217905550505050565b60025481565b600080600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161060e9190610ffe565b602060405180830381865afa15801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f91906110ec565b1161068f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068690611176565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166396e494e8836040518263ffffffff1660e01b81526004016106ea9190610fa2565b602060405180830381865afa158015610707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072b919061132c565b61076a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610761906113a5565b60405180910390fd5b6000600160006002548152602001908152602001600020905082816000018190555061012c4261079a91906113f4565b8160010181905550600260008154809291906107b590611428565b919050555060016002546107c99190611470565b915050919050565b6107d9610d6a565b6107e36000610df1565b565b6107ed610d6a565b600047905060008111610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082c90611516565b60405180910390fd5b600061083f6108ec565b73ffffffffffffffffffffffffffffffffffffffff168260405161086290611567565b60006040518083038185875af1925050503d806000811461089f576040519150601f19603f3d011682016040523d82523d6000602084013e6108a4565b606091505b50509050806108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df906115c8565b60405180910390fd5b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016109729190610ffe565b602060405180830381865afa15801561098f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b391906110ec565b116109f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ea90611176565b60405180910390fd5b8142600160008381526020019081526020016000206001015411610a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4390611634565b60405180910390fd5b60006001600085815260200190815260200160002090506000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610ac09190610ffe565b602060405180830381865afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0191906110ec565b90506000805b82811015610c30576000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f745c5933846040518363ffffffff1660e01b8152600401610b6e929190611654565b602060405180830381865afa158015610b8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610baf91906110ec565b90506000151585600501600083815260200190815260200160002060009054906101000a900460ff16151503610c1c578280610bea90611428565b935050600185600501600083815260200190815260200160002060006101000a81548160ff0219169083151502179055505b508080610c2890611428565b915050610b07565b5060008111610c74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6b906116c9565b60405180910390fd5b60006001811115610c8857610c876116e9565b5b856001811115610c9b57610c9a6116e9565b5b03610cc05780836002016000828254610cb491906113f4565b92505081905550610cdc565b80836003016000828254610cd491906113f4565b925050819055505b505050505050565b610cec610d6a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d5e5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d559190610ffe565b60405180910390fd5b610d6781610df1565b50565b610d72610eb5565b73ffffffffffffffffffffffffffffffffffffffff16610d906108ec565b73ffffffffffffffffffffffffffffffffffffffff1614610def57610db3610eb5565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610de69190610ffe565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b610ed581610ec2565b8114610ee057600080fd5b50565b600081359050610ef281610ecc565b92915050565b600060208284031215610f0e57610f0d610ebd565b5b6000610f1c84828501610ee3565b91505092915050565b610f2e81610ec2565b82525050565b60008115159050919050565b610f4981610f34565b82525050565b600060a082019050610f646000830188610f25565b610f716020830187610f25565b610f7e6040830186610f25565b610f8b6060830185610f25565b610f986080830184610f40565b9695505050505050565b6000602082019050610fb76000830184610f25565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fe882610fbd565b9050919050565b610ff881610fdd565b82525050565b60006020820190506110136000830184610fef565b92915050565b6002811061102657600080fd5b50565b60008135905061103881611019565b92915050565b6000806040838503121561105557611054610ebd565b5b600061106385828601610ee3565b925050602061107485828601611029565b9150509250929050565b61108781610fdd565b811461109257600080fd5b50565b6000813590506110a48161107e565b92915050565b6000602082840312156110c0576110bf610ebd565b5b60006110ce84828501611095565b91505092915050565b6000815190506110e681610ecc565b92915050565b60006020828403121561110257611101610ebd565b5b6000611110848285016110d7565b91505092915050565b600082825260208201905092915050565b7f4f6e6c792044414f206d656d6265727320616c6c6f7765642100000000000000600082015250565b6000611160601983611119565b915061116b8261112a565b602082019050919050565b6000602082019050818103600083015261118f81611153565b9050919050565b7f576169742120546865726573207374696c6c2074696d65206c6566742e2e2e00600082015250565b60006111cc601f83611119565b91506111d782611196565b602082019050919050565b600060208201905081810360008301526111fb816111bf565b9050919050565b7f5468652070726f706f73616c2068617320616c7265616479206265656e20657860008201527f6563757465642100000000000000000000000000000000000000000000000000602082015250565b600061125e602783611119565b915061126982611202565b604082019050919050565b6000602082019050818103600083015261128d81611251565b9050919050565b7f4e4f545f454e4f5547485f46554e445300000000000000000000000000000000600082015250565b60006112ca601083611119565b91506112d582611294565b602082019050919050565b600060208201905081810360008301526112f9816112bd565b9050919050565b61130981610f34565b811461131457600080fd5b50565b60008151905061132681611300565b92915050565b60006020828403121561134257611341610ebd565b5b600061135084828501611317565b91505092915050565b7f546865204e4654206973206e6f7420666f722073616c65210000000000000000600082015250565b600061138f601883611119565b915061139a82611359565b602082019050919050565b600060208201905081810360008301526113be81611382565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113ff82610ec2565b915061140a83610ec2565b9250828201905080821115611422576114216113c5565b5b92915050565b600061143382610ec2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611465576114646113c5565b5b600182019050919050565b600061147b82610ec2565b915061148683610ec2565b925082820390508181111561149e5761149d6113c5565b5b92915050565b7f4e6f7468696e6720746f2077697468647261772c20636f6e747261637420626160008201527f6c616e636520656d707479000000000000000000000000000000000000000000602082015250565b6000611500602b83611119565b915061150b826114a4565b604082019050919050565b6000602082019050818103600083015261152f816114f3565b9050919050565b600081905092915050565b50565b6000611551600083611536565b915061155c82611541565b600082019050919050565b600061157282611544565b9150819050919050565b7f4641494c45445f544f5f57495448445241575f45544845520000000000000000600082015250565b60006115b2601883611119565b91506115bd8261157c565b602082019050919050565b600060208201905081810360008301526115e1816115a5565b9050919050565b7f536f7272792c20627574207468652074696d6520697320757021000000000000600082015250565b600061161e601a83611119565b9150611629826115e8565b602082019050919050565b6000602082019050818103600083015261164d81611611565b9050919050565b60006040820190506116696000830185610fef565b6116766020830184610f25565b9392505050565b7f596f752063616e206f6e6c7920766f7465206f6e636521000000000000000000600082015250565b60006116b3601783611119565b91506116be8261167d565b602082019050919050565b600060208201905081810360008301526116e2816116a6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea2646970667358221220b84d4949c86ea41baee91e312f3190031f5396c0c1ccc36036326dc37a7d76ab64736f6c63430008140033";

type DaoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DaoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Dao__factory extends ContractFactory {
  constructor(...args: DaoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _market: AddressLike,
    _daoNFT: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_market, _daoNFT, overrides || {});
  }
  override deploy(
    _market: AddressLike,
    _daoNFT: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(_market, _daoNFT, overrides || {}) as Promise<
      Dao & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Dao__factory {
    return super.connect(runner) as Dao__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DaoInterface {
    return new Interface(_abi) as DaoInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Dao {
    return new Contract(address, _abi, runner) as unknown as Dao;
  }
}
